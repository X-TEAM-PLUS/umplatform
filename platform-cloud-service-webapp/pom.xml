<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.5.4.RELEASE</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.platform.admin</groupId>
    <artifactId>platform-cloud-service-webapp</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
        <spring-cloud.version>Edgware.RELEASE</spring-cloud.version>
        <json-version>2.6.0-rc1</json-version>
        <springframework-version>4.2.4.RELEASE</springframework-version>
        <maven.mybatis.spring.boot.version>1.3.1</maven.mybatis.spring.boot.version>
        <maven.freemarker.version>2.3.26-incubating</maven.freemarker.version>
        <mvn.spring.cloud.feign.version>1.3.5.RELEASE</mvn.spring.cloud.feign.version>
        <mvn.spring.boot.freemarker.version>1.5.8.RELEASE</mvn.spring.boot.freemarker.version>
        <maven.springframework.version>4.2.4.RELEASE</maven.springframework.version>
        <maven.slf4j.version>1.7.6</maven.slf4j.version>
        <mvn.spring.cloud.netflix.version>1.3.1.RELEASE</mvn.spring.cloud.netflix.version>
        <maven.log4j.version>1.2.17</maven.log4j.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>com.platform.admin</groupId>
            <artifactId>platform-cloud-service-common</artifactId>
            <version>1.0-SNAPSHOT</version>
            <exclusions>
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging</artifactId>
                </exclusion>
                <exclusion>
                    <artifactId>log4j-over-slf4j</artifactId>
                    <groupId>org.slf4j</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>slf4j-log4j12</artifactId>
                    <groupId>org.slf4j</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>log4j</artifactId>
                    <groupId>log4j</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.platform.admin</groupId>
            <artifactId>platform-cloud-service-api</artifactId>
            <version>1.0-SNAPSHOT</version>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.cloud</groupId>
                    <artifactId>spring-cloud-starter-feign</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.platform.admin</groupId>
            <artifactId>platform-cloud-security</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>
        <!-- Spring Boot Test 依赖 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <!--feign-->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-feign</artifactId>
            <version>${mvn.spring.cloud.feign.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-freemarker</artifactId>
            <version>${mvn.spring.boot.freemarker.version}</version>
        </dependency>
        <!-- Spring Cloud Netflix Eureka Client 依赖 -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-eureka</artifactId>
        </dependency>
    </dependencies>
    <dependencyManagement>
        <dependencies>
            <!-- Spring Cloud Netflix 依赖 -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-netflix</artifactId>
                <version>${mvn.spring.cloud.netflix.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <profiles>
        <profile>
            <id>develop</id>
            <properties>
                <!-- euerka注册中心地址-->
                <mvn.spring.cloud.euerka.server>http://localhost:8888/eureka/</mvn.spring.cloud.euerka.server>
            </properties>
        </profile>
        <profile>
            <id>test</id>
            <properties>
                <!-- euerka注册中心地址-->
                <mvn.spring.cloud.euerka.server>http://113.209.111.211:8888/eureka/</mvn.spring.cloud.euerka.server>
            </properties>
        </profile>
        <profile>
            <id>production</id>
            <properties>
                <!-- euerka注册中心地址-->
                <mvn.spring.cloud.euerka.server>http://172.31.204.15:8888/eureka/</mvn.spring.cloud.euerka.server>
            </properties>
        </profile>
    </profiles>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>
        </plugins>

        <resources>
            <resource>
                <directory>${project.basedir}/src/main/resources</directory>
                <filtering>true</filtering>
                <excludes>
                    <exclude>static/**</exclude>
                </excludes>
            </resource>
            <resource>
                <directory>${project.basedir}/src/main/resources</directory>
                <filtering>false</filtering>
                <includes>
                    <include>static/**</include>
                </includes>
            </resource>
        </resources>

    </build>

</project>